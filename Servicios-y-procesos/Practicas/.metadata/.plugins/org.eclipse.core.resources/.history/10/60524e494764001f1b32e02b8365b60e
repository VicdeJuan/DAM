package ejercicio1;

import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;


public class MainDescifradorPool {
	

	public static void main(String[] args) {
		
		String contraseña;
		String descifrada = "";
		int numHilos = 26;
		Scanner scanner = new Scanner(System.in);
        
        
        System.out.print("Por favor, escribe la contraseña a descifrar: ");
         contraseña = scanner.nextLine();
	
		
	
        long startTime = System.currentTimeMillis();
        byte[] encodedhash = Encoder.getHash(contraseña);
        
        
        ExecutorService pool = Executors.newFixedThreadPool(4);

        // Enviar 10 tareas al pool
        if (encodedhash != null) {
			//descifrada = desc.descifrarContraseña(encodedhash,contraseña.length());
        	int i=0;
        	for (char c1 = 'a'; c1 <= 'z'; c1++) {
        		hilos[i] = new Thread(;
        		hilos[i].start();
        		i++;
     		}	
        	
        for (int i = 0; i < 10; i++) {
            final int tareaId = i;
            pool.submit(() -> {
            	new DescifradorParalelo(encodedhash,contraseña.length()-1,""+c1);
            });
        }

        // Cerrar el pool
        pool.shutdown();
        

        
        //DescifradorSecuencial desc = new DescifradorSecuencial();   
        		
        
        
						
			try {
				for(i=0;i<numHilos;i++){
					hilos[i].join();
				}
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			descifrada = DescifradorParalelo.getContraseñaEncontrada();
		}
   
        long endTime = System.currentTimeMillis();

        long tiempoTranscurrido = endTime - startTime;
        System.out.println("Tiempo de ejecución: " + tiempoTranscurrido + " ms");
		System.out.println("Contraseña descifrada: " + descifrada);
		
		scanner.close();
		
	}
}
